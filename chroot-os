#!/bin/sh
# ===================================================================
# | chroot-os | Auto configure artix-link			    |
# -------------------------------------------------------------------
# | Author: Ahmad Ansori Palembani <banipalemban@gmail.com>	    |
# | License: NULL						    |
# ===================================================================

# prompt() {
# 	read -r YESNO
# 	if [ "$YESNO" = "yes" ]; then
# 		return
# 	elif [ "$YESNO" = "no" ]; then
# 		echo "[ ERROR ] Cancelled" && exit 1
# 	else
# 		prompt
# 	fi
# }

# choose_drive(){
# 	fdisk -l | grep "[A-Za-z]* /dev/[a-z]*" | sed 's/:.*//g ; s/^.* //g'
# 	echo -e "\nChoose the disk: (/dev/sdX)"
# 	read -r DRIVE
# 	[ -z $DRIVE ] && echo "[ ERROR ] \$DRIVE can't be NULL" && exit 1
# 	if [ $(fdisk -l | grep "$DRIVE" | wc -l) -gt 0 ]; then
# 		echo "[ OK ] Found $DRIVE"
# 	else 
# 		echo "[ ERROR ] $DRIVE not found" && exit 1
# 	fi
# 	echo -e "\nAre you sure $DRIVE is the correct location? (yes/no)"
# 	prompt
# }

# user_zone(){
# 	echo -e "\nRegion: (Default: Asia)"
# 	read -r REGION
# 	[ -z $REGION ] && REGION="Asia"
# 	echo -e "\nNearest Big City: (Default: Jakarta)"
# 	read -r CITY
# 	[ -z $CITY ] && CITY="Jakarta"
# 	cat /usr/share/zoneinfo/$REGION/$CITY >/dev/null || user_zone
# }

# ncurses

prompt_curse(){
	dialog --yesno "$1" 0 0 2>&1 > /dev/tty || exit 1
	return
}

prompt_curse_nokill(){
	dialog --yesno "$1" 0 0 2>&1 > /dev/tty
}

msgbox(){
	dialog --msgbox "$1" 0 0
}

# Install Functions

sel_drive(){
	DRIVE_LIST=( $(lsblk -nrpo "name,size" | grep "\/dev\/[a-z]* " ) )
	DRIVE=$(dialog --menu "Choose the correct drive" 0 0 0 ${DRIVE_LIST[@]} 2>&1 > /dev/tty)
	[ -z $DRIVE ] && echo "[ ERROR ] Cancelled" && exit 1
	prompt_curse "Are you sure $DRIVE is the correct location?"
}

sel_region(){
	regiondir="/usr/share/zoneinfo"
	REGION_LIST="$(ls $regiondir | grep "[A-Z][A-Za-z]"| sed 's/$/ -/g'| xargs)"
	# REGION_LIST="\
	# 	Africa -\
	# 	America -\
	# 	Asia -\
	# 	Australia -\
	# 	Europe -"
	REGION=$(dialog --nocancel --menu "Choose your region" 0 0 0 ${REGION_LIST[@]} 2>&1 > /dev/tty)
	CITY_LIST="$(ls $regiondir/$REGION | sed 's/$/ -/g'| xargs)"
	CITY=$(dialog --nocancel --menu "Choose the nearest big city/timezone" 0 0 0 ${CITY_LIST[@]} 2>&1 > /dev/tty)

	prompt_curse_nokill "Are you sure $REGION/$CITY is correct?" || sel_region
}

local_setting(){
	#clock
	sel_region
	ln -sf /usr/share/zoneinfo/$REGION/$CITY /etc/localtime
	hwclock --systohc
	
	#locale
	sed -i 's/\#en_US\./en_US\./g' /etc/locale.gen
	locale-gen
	pacman -S --noconfirm grub os-prober
	sel_drive
	grub-install --recheck $DRIVE
	grub-mkconfig -o /boot/grub/grub.cfg
}

ask_pass(){
	# echo -e "Password:"
	# read -s PASS
	# echo -e "\nRetype Password:"
	# read -s RE_PASS
	# echo ""
	
	PASS=$(dialog --nocancel --passwordbox "Type in your password" 0 0 2>&1 > /dev/tty)
	RE_PASS=$(dialog --nocancel --passwordbox "Type in your password" 0 0 2>&1 > /dev/tty)
	[ ! "$PASS" = "$RE_PASS" ] && msgbox "Password doesn't matched" && ask_pass
	[ -z $PASS ] && ask_pass
}

ask_user(){
	USER=$(dialog --nocancel --inputbox "Type in your username" 0 0 2>&1 > /dev/tty)
	[ -z $USER ] && ask_user
}

ask_int(){
	INT_LIST="$(ip -h link | grep "[0-9]: [a-zA-Z0-9]" | cut -d'<' -f1 | sed 's/^[0-9]: //g ; s/:/ -/g' | xargs)"
	INT=$(dialog --nocancel --menu "Choose your interface" 0 0 0 ${INT_LIST[@]} 2>&1 > /dev/tty)
	prompt_curse_nokill "Are you sure $INT is correct?" || ask_int
}

set_user(){
	ask_user
	ask_pass
	(
	echo $PASS
	echo $PASS
	) | passwd
	
	useradd -m $USER
	(
	echo $PASS
	echo $PASS
	) | passwd $USER
	usermod -aG games,video,storage,optical,audio,wheel $USER
	sed -i 's/\# %wheel ALL=(ALL) ALL/%wheel ALL=(ALL) ALL/g' /etc/sudoers

	echo $USER > /etc/hostname
	pacman -S --noconfirm dhcpcd connman-openrc connman-gtk cmst || pacman -S --noconfirm dhcpcd connman-openrc connman-gtk
	rc-update add connmand	
}

set_network() {
	echo "Checking dhcpcd..."
	[ "$(pacman -Q | grep "dhcpcd")" ] || pacman -S --noconfirm dhcpcd connman-openrc connman-gtk
	
	ask_int
	echo "
	config_$INT=\"dhcp\"" >> /etc/conf.d/net
	ln -s /etc/init.d/net.lo /etc/init.d/net.$INT
	rc-update add net.$INT default
	
	# download rc-network
	echo "Downloading rc-network..."
	curl -LOs https://raw.githubusercontent.com/null2264/autorice-zi/master/bin/rc-network && chmod +x rc-network && mv rc-network /usr/local/bin/
}

# Process
local_setting
set_user
set_network
echo -e "Install completed\n"
echo -e "Now type:\nexit\numount -R /mnt\nreboot"
exit
